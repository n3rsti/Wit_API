package com.web.wit.comment;

import com.web.wit.post.PostFacade;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;

@RestController()
@RequestMapping("/api/v1/")
public class CommentController {
    private final PostFacade postFacade;

    public CommentController(PostFacade postFacade) {
        this.postFacade = postFacade;
    }

    @PostMapping(path = "posts/{postId}/comments/", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<?> createComment(@RequestBody Comment comment, @PathVariable String postId, UriComponentsBuilder builder, Authentication authentication){
        comment.setPostId(postId);
        // make sure ID will be generated by mongodb, not user
        comment.setId(null);
        // set author to JWT subject
        comment.setAuthor(authentication.getPrincipal().toString());

        Comment createdComment = postFacade.createComment(comment);
        UriComponents uriComponents = builder.path("/api/v1/posts/{postId}/comments/{commentId}/")
                .buildAndExpand(createdComment.getPostId(), createdComment.getId());
        return ResponseEntity.created(uriComponents.toUri()).body(createdComment);
    }
}
